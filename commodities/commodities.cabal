Name:          commodities
Version:       0.2.0.1
Synopsis:      Library for working with commoditized amounts and price histories
Description:   Library for working with commoditized amounts and price histories
License-file:  LICENSE
License:       BSD3
Author:        John Wiegley
Maintainer:    johnw@newartisans.com
Build-Type:    Simple
Cabal-Version: >= 1.10
Category:      Finance

source-repository head
    type:     git
    location: git://github.com/ledger/ledger4.git

library
    default-language: Haskell98
    ghc-options:      -Wall
    exposed-modules:
        Ledger.Balance
        Ledger.Commodity
        Ledger.Commodity.History
        Ledger.Commodity.Parse
        Ledger.Commodity.Print
    build-depends:
        base                   >= 3 && < 5
      , PSQueue                >= 1.1
      , comonad                >= 4.0
      , containers             >= 0.5.0.0
      , distributive           >= 0.3.2
      , failure                >= 0.2
      , keys                   >= 3.10
      , lens                   >= 3.10
      , linear                 >= 1.3.1
      , mtl                    >= 2.1.2
      , numbers                >= 3000.2.0.0
      , parsers                >= 0.10.1.1
      , semigroups             >= 0.12
      , semigroupoids          >= 4.0
      , split                  >= 0.2.2
      , text                   >= 0.11.3.1
      , thyme                  >= 0.3.1.0
      , transformers
      , trifecta               >= 1.2.1.1

test-suite doctests
    default-language: Haskell98
    type:             exitcode-stdio-1.0
    main-is:          doctests.hs
    ghc-options:      -Wall
    hs-source-dirs:   test
    build-depends:
        base      >= 3   && < 5
      , directory >= 1.0 && < 1.4
      , doctest   >= 0.8 && < 0.12
      , filepath  >= 1.3 && < 1.5

Test-suite test
    default-language: Haskell98
    type:             exitcode-stdio-1.0
    main-is:          Main.hs
    ghc-options:      -Wall
    hs-source-dirs:   test
    build-depends: 
        base      >= 3   && < 5
      , commodities
      , QuickCheck
      , hspec
      , hspec-expectations
      , containers
      , lens
      , semigroups
      , thyme
      , transformers
